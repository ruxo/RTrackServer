@page "/clients"
@using RTrackServer.Services
@using RTrackServer.Domain
@using System.Timers
@inject ITrackerService service
@implements IDisposable

<h3>Clients</h3>

<main>
    <table>
        <thead>
        <tr>
            <th scope="col" style="width: 50%">Client IP</th>
            <th scope="col" style="width: 30%">Last Updated</th>
            <th scope="col" style="width: 20%">Elapsed</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var client in clients) {
            <tr @key="@client.EndPoint">
                <td>@client.EndPoint</td>
                <td>@client.LastUpdate.ToLocalTime()</td>
                <td>@client.SinceLastUpdate(now).TotalSeconds.ToString("N2")</td>
            </tr>
        }
        </tbody>
    </table>
</main>

@code {
    readonly Timer poller = new(1000) { AutoReset = true };
    ClientTracker[] clients = Array.Empty<ClientTracker>();
    DateTime now = DateTime.UtcNow;

    protected override void OnInitialized() {
        poller.Elapsed += (_, args) => {
            now = args.SignalTime.ToUniversalTime();
            InvokeAsync(async () => {
                clients = await service.GetTrackingClients();
                StateHasChanged();
            });
        };
        poller.Enabled = true;
    }

    public void Dispose() {
        poller.Dispose();
    }

}